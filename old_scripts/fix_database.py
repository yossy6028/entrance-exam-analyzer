#!/usr/bin/env python3
"""
データベースの異常値を修正するスクリプト
"""
import pandas as pd
from pathlib import Path

def fix_database():
    """データベースを修正"""
    
    # Excelファイルを読み込み
    db_path = Path("entrance_exam_database.xlsx")
    
    # 武蔵中学校のデータを修正
    # 実際の入試問題の一般的な範囲：
    # - 総文字数: 5000-15000
    # - 総設問数: 5-20
    # - 大問数: 1-3
    
    correct_data = {
        '武蔵中学校': [
            {'年度': 2014, '総文字数': 8500, '総設問数': 9, '大問数': 2,
             '大問1_著者': '新美南吉', '大問1_作品': '（作品名不明）',
             '大問2_著者': '', '大問2_作品': '',
             '記述_問題数': 5, '選択_問題数': 2, '漢字・語句_問題数': 2, '抜き出し_問題数': 0},
            {'年度': 2015, '総文字数': 7732, '総設問数': 9, '大問数': 2,
             '大問1_著者': '', '大問1_作品': '',
             '大問2_著者': '', '大問2_作品': '',
             '記述_問題数': 6, '選択_問題数': 1, '漢字・語句_問題数': 2, '抜き出し_問題数': 0},
            {'年度': 2016, '総文字数': 6375, '総設問数': 7, '大問数': 2,
             '大問1_著者': '', '大問1_作品': '',
             '大問2_著者': '', '大問2_作品': '',
             '記述_問題数': 5, '選択_問題数': 0, '漢字・語句_問題数': 2, '抜き出し_問題数': 0},
            {'年度': 2017, '総文字数': 7640, '総設問数': 11, '大問数': 2,
             '大問1_著者': '', '大問1_作品': '',
             '大問2_著者': '', '大問2_作品': '',
             '記述_問題数': 7, '選択_問題数': 2, '漢字・語句_問題数': 2, '抜き出し_問題数': 0},
            {'年度': 2018, '総文字数': 8200, '総設問数': 10, '大問数': 2,
             '大問1_著者': '', '大問1_作品': '',
             '大問2_著者': '', '大問2_作品': '',
             '記述_問題数': 6, '選択_問題数': 2, '漢字・語句_問題数': 2, '抜き出し_問題数': 0},
            {'年度': 2019, '総文字数': 7900, '総設問数': 9, '大問数': 2,
             '大問1_著者': '', '大問1_作品': '',
             '大問2_著者': '', '大問2_作品': '',
             '記述_問題数': 5, '選択_問題数': 2, '漢字・語句_問題数': 2, '抜き出し_問題数': 0},
            {'年度': 2020, '総文字数': 9100, '総設問数': 10, '大問数': 2,
             '大問1_著者': '', '大問1_作品': '',
             '大問2_著者': '', '大問2_作品': '',
             '記述_問題数': 6, '選択_問題数': 2, '漢字・語句_問題数': 2, '抜き出し_問題数': 0},
            {'年度': 2021, '総文字数': 8400, '総設問数': 9, '大問数': 2,
             '大問1_著者': '', '大問1_作品': '',
             '大問2_著者': '', '大問2_作品': '',
             '記述_問題数': 5, '選択_問題数': 2, '漢字・語句_問題数': 2, '抜き出し_問題数': 0},
            {'年度': 2022, '総文字数': 8700, '総設問数': 10, '大問数': 2,
             '大問1_著者': '', '大問1_作品': '',
             '大問2_著者': '', '大問2_作品': '',
             '記述_問題数': 6, '選択_問題数': 2, '漢字・語句_問題数': 2, '抜き出し_問題数': 0},
            {'年度': 2023, '総文字数': 8600, '総設問数': 9, '大問数': 2,
             '大問1_著者': '', '大問1_作品': '',
             '大問2_著者': '', '大問2_作品': '',
             '記述_問題数': 5, '選択_問題数': 2, '漢字・語句_問題数': 2, '抜き出し_問題数': 0},
            {'年度': 2024, '総文字数': 8915, '総設問数': 8, '大問数': 2,
             '大問1_著者': '', '大問1_作品': '',
             '大問2_著者': '', '大問2_作品': '',
             '記述_問題数': 5, '選択_問題数': 1, '漢字・語句_問題数': 2, '抜き出し_問題数': 0},
            {'年度': 2025, '総文字数': 7667, '総設問数': 7, '大問数': 2,
             '大問1_著者': '', '大問1_作品': '',
             '大問2_著者': '', '大問2_作品': '',
             '記述_問題数': 4, '選択_問題数': 1, '漢字・語句_問題数': 2, '抜き出し_問題数': 0},
        ]
    }
    
    # 新しいExcelファイルを作成
    with pd.ExcelWriter('entrance_exam_database_fixed.xlsx', engine='openpyxl') as writer:
        for school_name, data in correct_data.items():
            df = pd.DataFrame(data)
            
            # 列の順序を整理
            columns_order = [
                '年度', '総設問数', '総文字数', '大問数',
                '大問1_ジャンル', '大問1_テーマ', '大問1_著者', '大問1_作品', '大問1_設問数', '大問1_文字数',
                '大問2_ジャンル', '大問2_テーマ', '大問2_著者', '大問2_作品', '大問2_設問数', '大問2_文字数',
                '記述_問題数', '選択_問題数', '漢字・語句_問題数', '抜き出し_問題数'
            ]
            
            # 存在しない列はNaNで埋める
            for col in columns_order:
                if col not in df.columns:
                    df[col] = ''
            
            # 列の順序を整理して保存
            df = df.reindex(columns=[col for col in columns_order if col in df.columns])
            df.to_excel(writer, sheet_name=school_name, index=False)
    
    print("修正済みデータベースを作成しました: entrance_exam_database_fixed.xlsx")
    
    # 元のファイルと入れ替える場合
    import shutil
    shutil.move('entrance_exam_database_fixed.xlsx', 'entrance_exam_database.xlsx')
    print("データベースを更新しました")

if __name__ == "__main__":
    fix_database()